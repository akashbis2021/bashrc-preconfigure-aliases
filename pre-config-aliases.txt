# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='[\[\033[01;34m\]\w\[\033[00m\]]: '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi


#additional
alias wifidetails="ifconfig wlx340a33309e19"
alias photo="gwenview"
alias shut="shutdown now"
alias linkserver="linking.sh"
alias serveron="serveron.sh"
alias reboot="sudo reboot now"
alias pdf="okular"
alias bashrc="bashrc.sh"
alias key="keepassx"
alias devl="lsblk"
alias clear="clear ; bash"
alias hisc="history -c"
alias play="celluloid"
alias kernelist="dpkg --get-selections | grep linux-image"
alias brave="brave-browser"
alias checkdisk="sudo e2fsck -fn"
alias defragment="sudo e4defrag"
alias editmodeon="qdbus org.kde.plasmashell /PlasmaShell evaluateScript 'lockCorona(false)'"
alias editmodeoff="qdbus org.kde.plasmashell /PlasmaShell evaluateScript 'lockCorona(true)'"
alias histc="history -c"
alias printweb="wkhtmltopdf"

#permission
alias ex="sudo chmod +x"
alias fullex="sudo chmod 777"
alias fullrmex="sudo chmod 000"
alias userex="sudo chmod u+rwx"
alias groupex="sudo chmod g+rwx"
alias otherex="sudo chmod o+rwx"
alias userrm="sudo chmod u-rwx"
alias grouprm="sudo chmod g-rwx"
alias otherrm="sudo chmod o-rwx"
alias userrmx="sudo chmod u-x"
alias grouprmx="sudo chmod g-x"
alias otherrmx="sudo chmod o-x"
alias userrmw="sudo chmod u-w"
alias grouprmw="sudo chmod g-w"
alias otherrmw="sudo chmod o-w"
alias userrmr="sudo chmod u-r"
alias grouprmr="sudo chmod g-r"
alias otherrmr="sudo chmod o-r"
alias userx="sudo chmod u+x"
alias groupx="sudo chmod g+x"
alias otherx="sudo chmod o+x"
alias userw="sudo chmod u+w"
alias groupw="sudo chmod g+w"
alias otherw="sudo chmod o+w"
alias userr="sudo chmod u+r"
alias groupr="sudo chmod g+r"
alias otherr="sudo chmod o+r"

#package management
alias distupdate="sudo apt-get dist-upgrade"
alias update="sudo apt-get update"
alias autoremove="sudo apt-get autoremove "
alias autoclean="sudo apt-get autoclean"
alias pkconupdate="sudo pkcon refresh && pkcon update"
alias purge="sudo apt-get purge"
alias pkconupdate="sudo pkcon refresh && pkcon update"
alias fullupdate="sudo apt full-upgrade"
alias i="sudo apt-get install"

#firewall
alias firewallenable="sudo ufw enable"
alias firewalldisable="sudo ufw disable"
alias firewallstat="sudo ufw status"
alias firewallalln="sudo ufw status numbered"
alias calculate="bc"


#directory operation
alias apps="cd /home/private/.local/share/applications"
alias programs="cd /home/private/programs"
alias backup="cd /mnt/hdd/learning/commands/linux-commands/backup-system"
alias workprocess="workprocess.sh"
alias su="sudo su"
alias root="cd / "
alias user="cd ~"
alias hdd="cd /mnt/hdd"
alias del="rm -r"
alias desktop="cd /home/private/Desktop"
alias downloads="cd /home/private/Downloads"
alias videos="cd /home/private/Videos"
alias documents="cd /home/private/Documents"
alias cloud="cd /mnt/hdd/nextcloud/tabcloud"
alias rname="rname.sh"
alias pictures="cd /home/private/Pictures"
alias systembackup="cd /mnt/hdd/timeshift"
#systemctl
alias systemctlstatus="sudo systemctl status"
alias systemctlenable="sudo systemctl enable"
alias systemctldisable="sudo systemctl disable"
alias systemctlstart="sudo systemctl start"
alias systemctlstop="sudo systemctl stop"
alias systemctlenablenow="sudo systemctl enable --now"
alias systemctldisablenow="sudo systemctl disable --now"


#Customizing-terminal
figlet -cw 125 Secure Linux
echo ""
echo -e "\e[0;32m Os:\e[0m" "KDE üî•22.04.1"
echo -e "\e[0;32m Kernel: \e[0m""5.15.0-56"
echo -e "\e[0;32m DE:\e[0m" "Plasma ‚ùÑ 5.24.6"
echo -e "\e[0;32m Local IP:\e[0m" "192.168.0.***"
echo -e "\e[0;32m CPU:\e[0m" "AMD Ryzen 5 3400G (8) @ 3.775GHz"
echo " "


